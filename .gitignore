# Rust build artifacts
/target/
**/*.rs.bk
*.pdb

# Cargo
.cargo/

# IDE files
.idea/
.vscode/
.devcontainer/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Environment files
.env
.env.local
.env.dev
.env.test
.env.stag
.env.prod
.env.*.local

# Node.js (for any frontend components)
/node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
ts-grpc-react-admin/node_modules/

# Application specific
/public/upload/
/public/log/
/public/install_demo/

# Rust-specific
# Generated by Cargo
# will have compiled files and executables
debug/
target/
release/

# We're keeping Cargo.lock since this is an executable project
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb

# Security and audit files (keep these tracked)
# audit.toml - keep tracked
# deny.toml - keep tracked
# Makefile.security - keep tracked

# Temporary files
*.tmp
*.temp
*.log

# Test artifacts
/tests/target/
/tests/output/

# Documentation build
/target/doc/
/docs/target/

# Benchmark results
/target/criterion/

# Coverage reports
/target/coverage/
/target/tarpaulin/
*.profraw

# Local development
.local/
.cache/