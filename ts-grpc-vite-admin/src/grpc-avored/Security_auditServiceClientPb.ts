/**
 * @fileoverview gRPC-Web generated client stub for security_audit
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v6.32.0
// source: security_audit.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as security_audit_pb from './security_audit_pb'; // proto import: "security_audit.proto"


export class SecurityAuditClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'binary';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorCreateSecurityAudit = new grpcWeb.MethodDescriptor(
    '/security_audit.SecurityAudit/CreateSecurityAudit',
    grpcWeb.MethodType.UNARY,
    security_audit_pb.CreateSecurityAuditRequest,
    security_audit_pb.CreateSecurityAuditResponse,
    (request: security_audit_pb.CreateSecurityAuditRequest) => {
      return request.serializeBinary();
    },
    security_audit_pb.CreateSecurityAuditResponse.deserializeBinary
  );

  createSecurityAudit(
    request: security_audit_pb.CreateSecurityAuditRequest,
    metadata?: grpcWeb.Metadata | null): Promise<security_audit_pb.CreateSecurityAuditResponse>;

  createSecurityAudit(
    request: security_audit_pb.CreateSecurityAuditRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: security_audit_pb.CreateSecurityAuditResponse) => void): grpcWeb.ClientReadableStream<security_audit_pb.CreateSecurityAuditResponse>;

  createSecurityAudit(
    request: security_audit_pb.CreateSecurityAuditRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: security_audit_pb.CreateSecurityAuditResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/security_audit.SecurityAudit/CreateSecurityAudit',
        request,
        metadata || {},
        this.methodDescriptorCreateSecurityAudit,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/security_audit.SecurityAudit/CreateSecurityAudit',
    request,
    metadata || {},
    this.methodDescriptorCreateSecurityAudit);
  }

  methodDescriptorLogSecurityEvent = new grpcWeb.MethodDescriptor(
    '/security_audit.SecurityAudit/LogSecurityEvent',
    grpcWeb.MethodType.UNARY,
    security_audit_pb.LogSecurityEventRequest,
    security_audit_pb.LogSecurityEventResponse,
    (request: security_audit_pb.LogSecurityEventRequest) => {
      return request.serializeBinary();
    },
    security_audit_pb.LogSecurityEventResponse.deserializeBinary
  );

  logSecurityEvent(
    request: security_audit_pb.LogSecurityEventRequest,
    metadata?: grpcWeb.Metadata | null): Promise<security_audit_pb.LogSecurityEventResponse>;

  logSecurityEvent(
    request: security_audit_pb.LogSecurityEventRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: security_audit_pb.LogSecurityEventResponse) => void): grpcWeb.ClientReadableStream<security_audit_pb.LogSecurityEventResponse>;

  logSecurityEvent(
    request: security_audit_pb.LogSecurityEventRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: security_audit_pb.LogSecurityEventResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/security_audit.SecurityAudit/LogSecurityEvent',
        request,
        metadata || {},
        this.methodDescriptorLogSecurityEvent,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/security_audit.SecurityAudit/LogSecurityEvent',
    request,
    metadata || {},
    this.methodDescriptorLogSecurityEvent);
  }

  methodDescriptorGetSecurityAudit = new grpcWeb.MethodDescriptor(
    '/security_audit.SecurityAudit/GetSecurityAudit',
    grpcWeb.MethodType.UNARY,
    security_audit_pb.GetSecurityAuditRequest,
    security_audit_pb.GetSecurityAuditResponse,
    (request: security_audit_pb.GetSecurityAuditRequest) => {
      return request.serializeBinary();
    },
    security_audit_pb.GetSecurityAuditResponse.deserializeBinary
  );

  getSecurityAudit(
    request: security_audit_pb.GetSecurityAuditRequest,
    metadata?: grpcWeb.Metadata | null): Promise<security_audit_pb.GetSecurityAuditResponse>;

  getSecurityAudit(
    request: security_audit_pb.GetSecurityAuditRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: security_audit_pb.GetSecurityAuditResponse) => void): grpcWeb.ClientReadableStream<security_audit_pb.GetSecurityAuditResponse>;

  getSecurityAudit(
    request: security_audit_pb.GetSecurityAuditRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: security_audit_pb.GetSecurityAuditResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/security_audit.SecurityAudit/GetSecurityAudit',
        request,
        metadata || {},
        this.methodDescriptorGetSecurityAudit,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/security_audit.SecurityAudit/GetSecurityAudit',
    request,
    metadata || {},
    this.methodDescriptorGetSecurityAudit);
  }

  methodDescriptorGetSecurityAuditsByUser = new grpcWeb.MethodDescriptor(
    '/security_audit.SecurityAudit/GetSecurityAuditsByUser',
    grpcWeb.MethodType.UNARY,
    security_audit_pb.GetSecurityAuditsByUserRequest,
    security_audit_pb.GetSecurityAuditsByUserResponse,
    (request: security_audit_pb.GetSecurityAuditsByUserRequest) => {
      return request.serializeBinary();
    },
    security_audit_pb.GetSecurityAuditsByUserResponse.deserializeBinary
  );

  getSecurityAuditsByUser(
    request: security_audit_pb.GetSecurityAuditsByUserRequest,
    metadata?: grpcWeb.Metadata | null): Promise<security_audit_pb.GetSecurityAuditsByUserResponse>;

  getSecurityAuditsByUser(
    request: security_audit_pb.GetSecurityAuditsByUserRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: security_audit_pb.GetSecurityAuditsByUserResponse) => void): grpcWeb.ClientReadableStream<security_audit_pb.GetSecurityAuditsByUserResponse>;

  getSecurityAuditsByUser(
    request: security_audit_pb.GetSecurityAuditsByUserRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: security_audit_pb.GetSecurityAuditsByUserResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/security_audit.SecurityAudit/GetSecurityAuditsByUser',
        request,
        metadata || {},
        this.methodDescriptorGetSecurityAuditsByUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/security_audit.SecurityAudit/GetSecurityAuditsByUser',
    request,
    metadata || {},
    this.methodDescriptorGetSecurityAuditsByUser);
  }

  methodDescriptorGetSecurityAuditsByIp = new grpcWeb.MethodDescriptor(
    '/security_audit.SecurityAudit/GetSecurityAuditsByIp',
    grpcWeb.MethodType.UNARY,
    security_audit_pb.GetSecurityAuditsByIpRequest,
    security_audit_pb.GetSecurityAuditsByIpResponse,
    (request: security_audit_pb.GetSecurityAuditsByIpRequest) => {
      return request.serializeBinary();
    },
    security_audit_pb.GetSecurityAuditsByIpResponse.deserializeBinary
  );

  getSecurityAuditsByIp(
    request: security_audit_pb.GetSecurityAuditsByIpRequest,
    metadata?: grpcWeb.Metadata | null): Promise<security_audit_pb.GetSecurityAuditsByIpResponse>;

  getSecurityAuditsByIp(
    request: security_audit_pb.GetSecurityAuditsByIpRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: security_audit_pb.GetSecurityAuditsByIpResponse) => void): grpcWeb.ClientReadableStream<security_audit_pb.GetSecurityAuditsByIpResponse>;

  getSecurityAuditsByIp(
    request: security_audit_pb.GetSecurityAuditsByIpRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: security_audit_pb.GetSecurityAuditsByIpResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/security_audit.SecurityAudit/GetSecurityAuditsByIp',
        request,
        metadata || {},
        this.methodDescriptorGetSecurityAuditsByIp,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/security_audit.SecurityAudit/GetSecurityAuditsByIp',
    request,
    metadata || {},
    this.methodDescriptorGetSecurityAuditsByIp);
  }

  methodDescriptorGetSecurityAuditsPaginated = new grpcWeb.MethodDescriptor(
    '/security_audit.SecurityAudit/GetSecurityAuditsPaginated',
    grpcWeb.MethodType.UNARY,
    security_audit_pb.GetSecurityAuditsPaginatedRequest,
    security_audit_pb.GetSecurityAuditsPaginatedResponse,
    (request: security_audit_pb.GetSecurityAuditsPaginatedRequest) => {
      return request.serializeBinary();
    },
    security_audit_pb.GetSecurityAuditsPaginatedResponse.deserializeBinary
  );

  getSecurityAuditsPaginated(
    request: security_audit_pb.GetSecurityAuditsPaginatedRequest,
    metadata?: grpcWeb.Metadata | null): Promise<security_audit_pb.GetSecurityAuditsPaginatedResponse>;

  getSecurityAuditsPaginated(
    request: security_audit_pb.GetSecurityAuditsPaginatedRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: security_audit_pb.GetSecurityAuditsPaginatedResponse) => void): grpcWeb.ClientReadableStream<security_audit_pb.GetSecurityAuditsPaginatedResponse>;

  getSecurityAuditsPaginated(
    request: security_audit_pb.GetSecurityAuditsPaginatedRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: security_audit_pb.GetSecurityAuditsPaginatedResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/security_audit.SecurityAudit/GetSecurityAuditsPaginated',
        request,
        metadata || {},
        this.methodDescriptorGetSecurityAuditsPaginated,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/security_audit.SecurityAudit/GetSecurityAuditsPaginated',
    request,
    metadata || {},
    this.methodDescriptorGetSecurityAuditsPaginated);
  }

  methodDescriptorUpdateSecurityAudit = new grpcWeb.MethodDescriptor(
    '/security_audit.SecurityAudit/UpdateSecurityAudit',
    grpcWeb.MethodType.UNARY,
    security_audit_pb.UpdateSecurityAuditRequest,
    security_audit_pb.UpdateSecurityAuditResponse,
    (request: security_audit_pb.UpdateSecurityAuditRequest) => {
      return request.serializeBinary();
    },
    security_audit_pb.UpdateSecurityAuditResponse.deserializeBinary
  );

  updateSecurityAudit(
    request: security_audit_pb.UpdateSecurityAuditRequest,
    metadata?: grpcWeb.Metadata | null): Promise<security_audit_pb.UpdateSecurityAuditResponse>;

  updateSecurityAudit(
    request: security_audit_pb.UpdateSecurityAuditRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: security_audit_pb.UpdateSecurityAuditResponse) => void): grpcWeb.ClientReadableStream<security_audit_pb.UpdateSecurityAuditResponse>;

  updateSecurityAudit(
    request: security_audit_pb.UpdateSecurityAuditRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: security_audit_pb.UpdateSecurityAuditResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/security_audit.SecurityAudit/UpdateSecurityAudit',
        request,
        metadata || {},
        this.methodDescriptorUpdateSecurityAudit,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/security_audit.SecurityAudit/UpdateSecurityAudit',
    request,
    metadata || {},
    this.methodDescriptorUpdateSecurityAudit);
  }

  methodDescriptorDeleteSecurityAudit = new grpcWeb.MethodDescriptor(
    '/security_audit.SecurityAudit/DeleteSecurityAudit',
    grpcWeb.MethodType.UNARY,
    security_audit_pb.DeleteSecurityAuditRequest,
    security_audit_pb.DeleteSecurityAuditResponse,
    (request: security_audit_pb.DeleteSecurityAuditRequest) => {
      return request.serializeBinary();
    },
    security_audit_pb.DeleteSecurityAuditResponse.deserializeBinary
  );

  deleteSecurityAudit(
    request: security_audit_pb.DeleteSecurityAuditRequest,
    metadata?: grpcWeb.Metadata | null): Promise<security_audit_pb.DeleteSecurityAuditResponse>;

  deleteSecurityAudit(
    request: security_audit_pb.DeleteSecurityAuditRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: security_audit_pb.DeleteSecurityAuditResponse) => void): grpcWeb.ClientReadableStream<security_audit_pb.DeleteSecurityAuditResponse>;

  deleteSecurityAudit(
    request: security_audit_pb.DeleteSecurityAuditRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: security_audit_pb.DeleteSecurityAuditResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/security_audit.SecurityAudit/DeleteSecurityAudit',
        request,
        metadata || {},
        this.methodDescriptorDeleteSecurityAudit,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/security_audit.SecurityAudit/DeleteSecurityAudit',
    request,
    metadata || {},
    this.methodDescriptorDeleteSecurityAudit);
  }

  methodDescriptorGetIpSecuritySummary = new grpcWeb.MethodDescriptor(
    '/security_audit.SecurityAudit/GetIpSecuritySummary',
    grpcWeb.MethodType.UNARY,
    security_audit_pb.GetIpSecuritySummaryRequest,
    security_audit_pb.GetIpSecuritySummaryResponse,
    (request: security_audit_pb.GetIpSecuritySummaryRequest) => {
      return request.serializeBinary();
    },
    security_audit_pb.GetIpSecuritySummaryResponse.deserializeBinary
  );

  getIpSecuritySummary(
    request: security_audit_pb.GetIpSecuritySummaryRequest,
    metadata?: grpcWeb.Metadata | null): Promise<security_audit_pb.GetIpSecuritySummaryResponse>;

  getIpSecuritySummary(
    request: security_audit_pb.GetIpSecuritySummaryRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: security_audit_pb.GetIpSecuritySummaryResponse) => void): grpcWeb.ClientReadableStream<security_audit_pb.GetIpSecuritySummaryResponse>;

  getIpSecuritySummary(
    request: security_audit_pb.GetIpSecuritySummaryRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: security_audit_pb.GetIpSecuritySummaryResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/security_audit.SecurityAudit/GetIpSecuritySummary',
        request,
        metadata || {},
        this.methodDescriptorGetIpSecuritySummary,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/security_audit.SecurityAudit/GetIpSecuritySummary',
    request,
    metadata || {},
    this.methodDescriptorGetIpSecuritySummary);
  }

}

export class SecurityAlertClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'binary';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorCreateSecurityAlert = new grpcWeb.MethodDescriptor(
    '/security_audit.SecurityAlert/CreateSecurityAlert',
    grpcWeb.MethodType.UNARY,
    security_audit_pb.CreateSecurityAlertRequest,
    security_audit_pb.CreateSecurityAlertResponse,
    (request: security_audit_pb.CreateSecurityAlertRequest) => {
      return request.serializeBinary();
    },
    security_audit_pb.CreateSecurityAlertResponse.deserializeBinary
  );

  createSecurityAlert(
    request: security_audit_pb.CreateSecurityAlertRequest,
    metadata?: grpcWeb.Metadata | null): Promise<security_audit_pb.CreateSecurityAlertResponse>;

  createSecurityAlert(
    request: security_audit_pb.CreateSecurityAlertRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: security_audit_pb.CreateSecurityAlertResponse) => void): grpcWeb.ClientReadableStream<security_audit_pb.CreateSecurityAlertResponse>;

  createSecurityAlert(
    request: security_audit_pb.CreateSecurityAlertRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: security_audit_pb.CreateSecurityAlertResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/security_audit.SecurityAlert/CreateSecurityAlert',
        request,
        metadata || {},
        this.methodDescriptorCreateSecurityAlert,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/security_audit.SecurityAlert/CreateSecurityAlert',
    request,
    metadata || {},
    this.methodDescriptorCreateSecurityAlert);
  }

  methodDescriptorCreateSecurityAlertAutoId = new grpcWeb.MethodDescriptor(
    '/security_audit.SecurityAlert/CreateSecurityAlertAutoId',
    grpcWeb.MethodType.UNARY,
    security_audit_pb.CreateSecurityAlertAutoIdRequest,
    security_audit_pb.CreateSecurityAlertAutoIdResponse,
    (request: security_audit_pb.CreateSecurityAlertAutoIdRequest) => {
      return request.serializeBinary();
    },
    security_audit_pb.CreateSecurityAlertAutoIdResponse.deserializeBinary
  );

  createSecurityAlertAutoId(
    request: security_audit_pb.CreateSecurityAlertAutoIdRequest,
    metadata?: grpcWeb.Metadata | null): Promise<security_audit_pb.CreateSecurityAlertAutoIdResponse>;

  createSecurityAlertAutoId(
    request: security_audit_pb.CreateSecurityAlertAutoIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: security_audit_pb.CreateSecurityAlertAutoIdResponse) => void): grpcWeb.ClientReadableStream<security_audit_pb.CreateSecurityAlertAutoIdResponse>;

  createSecurityAlertAutoId(
    request: security_audit_pb.CreateSecurityAlertAutoIdRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: security_audit_pb.CreateSecurityAlertAutoIdResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/security_audit.SecurityAlert/CreateSecurityAlertAutoId',
        request,
        metadata || {},
        this.methodDescriptorCreateSecurityAlertAutoId,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/security_audit.SecurityAlert/CreateSecurityAlertAutoId',
    request,
    metadata || {},
    this.methodDescriptorCreateSecurityAlertAutoId);
  }

  methodDescriptorGetSecurityAlert = new grpcWeb.MethodDescriptor(
    '/security_audit.SecurityAlert/GetSecurityAlert',
    grpcWeb.MethodType.UNARY,
    security_audit_pb.GetSecurityAlertRequest,
    security_audit_pb.GetSecurityAlertResponse,
    (request: security_audit_pb.GetSecurityAlertRequest) => {
      return request.serializeBinary();
    },
    security_audit_pb.GetSecurityAlertResponse.deserializeBinary
  );

  getSecurityAlert(
    request: security_audit_pb.GetSecurityAlertRequest,
    metadata?: grpcWeb.Metadata | null): Promise<security_audit_pb.GetSecurityAlertResponse>;

  getSecurityAlert(
    request: security_audit_pb.GetSecurityAlertRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: security_audit_pb.GetSecurityAlertResponse) => void): grpcWeb.ClientReadableStream<security_audit_pb.GetSecurityAlertResponse>;

  getSecurityAlert(
    request: security_audit_pb.GetSecurityAlertRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: security_audit_pb.GetSecurityAlertResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/security_audit.SecurityAlert/GetSecurityAlert',
        request,
        metadata || {},
        this.methodDescriptorGetSecurityAlert,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/security_audit.SecurityAlert/GetSecurityAlert',
    request,
    metadata || {},
    this.methodDescriptorGetSecurityAlert);
  }

  methodDescriptorGetUnresolvedAlertsBySeverity = new grpcWeb.MethodDescriptor(
    '/security_audit.SecurityAlert/GetUnresolvedAlertsBySeverity',
    grpcWeb.MethodType.UNARY,
    security_audit_pb.GetUnresolvedAlertsBySeverityRequest,
    security_audit_pb.GetUnresolvedAlertsBySeverityResponse,
    (request: security_audit_pb.GetUnresolvedAlertsBySeverityRequest) => {
      return request.serializeBinary();
    },
    security_audit_pb.GetUnresolvedAlertsBySeverityResponse.deserializeBinary
  );

  getUnresolvedAlertsBySeverity(
    request: security_audit_pb.GetUnresolvedAlertsBySeverityRequest,
    metadata?: grpcWeb.Metadata | null): Promise<security_audit_pb.GetUnresolvedAlertsBySeverityResponse>;

  getUnresolvedAlertsBySeverity(
    request: security_audit_pb.GetUnresolvedAlertsBySeverityRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: security_audit_pb.GetUnresolvedAlertsBySeverityResponse) => void): grpcWeb.ClientReadableStream<security_audit_pb.GetUnresolvedAlertsBySeverityResponse>;

  getUnresolvedAlertsBySeverity(
    request: security_audit_pb.GetUnresolvedAlertsBySeverityRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: security_audit_pb.GetUnresolvedAlertsBySeverityResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/security_audit.SecurityAlert/GetUnresolvedAlertsBySeverity',
        request,
        metadata || {},
        this.methodDescriptorGetUnresolvedAlertsBySeverity,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/security_audit.SecurityAlert/GetUnresolvedAlertsBySeverity',
    request,
    metadata || {},
    this.methodDescriptorGetUnresolvedAlertsBySeverity);
  }

  methodDescriptorGetAlertsByType = new grpcWeb.MethodDescriptor(
    '/security_audit.SecurityAlert/GetAlertsByType',
    grpcWeb.MethodType.UNARY,
    security_audit_pb.GetAlertsByTypeRequest,
    security_audit_pb.GetAlertsByTypeResponse,
    (request: security_audit_pb.GetAlertsByTypeRequest) => {
      return request.serializeBinary();
    },
    security_audit_pb.GetAlertsByTypeResponse.deserializeBinary
  );

  getAlertsByType(
    request: security_audit_pb.GetAlertsByTypeRequest,
    metadata?: grpcWeb.Metadata | null): Promise<security_audit_pb.GetAlertsByTypeResponse>;

  getAlertsByType(
    request: security_audit_pb.GetAlertsByTypeRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: security_audit_pb.GetAlertsByTypeResponse) => void): grpcWeb.ClientReadableStream<security_audit_pb.GetAlertsByTypeResponse>;

  getAlertsByType(
    request: security_audit_pb.GetAlertsByTypeRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: security_audit_pb.GetAlertsByTypeResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/security_audit.SecurityAlert/GetAlertsByType',
        request,
        metadata || {},
        this.methodDescriptorGetAlertsByType,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/security_audit.SecurityAlert/GetAlertsByType',
    request,
    metadata || {},
    this.methodDescriptorGetAlertsByType);
  }

  methodDescriptorGetAlertsBySource = new grpcWeb.MethodDescriptor(
    '/security_audit.SecurityAlert/GetAlertsBySource',
    grpcWeb.MethodType.UNARY,
    security_audit_pb.GetAlertsBySourceRequest,
    security_audit_pb.GetAlertsBySourceResponse,
    (request: security_audit_pb.GetAlertsBySourceRequest) => {
      return request.serializeBinary();
    },
    security_audit_pb.GetAlertsBySourceResponse.deserializeBinary
  );

  getAlertsBySource(
    request: security_audit_pb.GetAlertsBySourceRequest,
    metadata?: grpcWeb.Metadata | null): Promise<security_audit_pb.GetAlertsBySourceResponse>;

  getAlertsBySource(
    request: security_audit_pb.GetAlertsBySourceRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: security_audit_pb.GetAlertsBySourceResponse) => void): grpcWeb.ClientReadableStream<security_audit_pb.GetAlertsBySourceResponse>;

  getAlertsBySource(
    request: security_audit_pb.GetAlertsBySourceRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: security_audit_pb.GetAlertsBySourceResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/security_audit.SecurityAlert/GetAlertsBySource',
        request,
        metadata || {},
        this.methodDescriptorGetAlertsBySource,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/security_audit.SecurityAlert/GetAlertsBySource',
    request,
    metadata || {},
    this.methodDescriptorGetAlertsBySource);
  }

  methodDescriptorResolveSecurityAlert = new grpcWeb.MethodDescriptor(
    '/security_audit.SecurityAlert/ResolveSecurityAlert',
    grpcWeb.MethodType.UNARY,
    security_audit_pb.ResolveSecurityAlertRequest,
    security_audit_pb.ResolveSecurityAlertResponse,
    (request: security_audit_pb.ResolveSecurityAlertRequest) => {
      return request.serializeBinary();
    },
    security_audit_pb.ResolveSecurityAlertResponse.deserializeBinary
  );

  resolveSecurityAlert(
    request: security_audit_pb.ResolveSecurityAlertRequest,
    metadata?: grpcWeb.Metadata | null): Promise<security_audit_pb.ResolveSecurityAlertResponse>;

  resolveSecurityAlert(
    request: security_audit_pb.ResolveSecurityAlertRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: security_audit_pb.ResolveSecurityAlertResponse) => void): grpcWeb.ClientReadableStream<security_audit_pb.ResolveSecurityAlertResponse>;

  resolveSecurityAlert(
    request: security_audit_pb.ResolveSecurityAlertRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: security_audit_pb.ResolveSecurityAlertResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/security_audit.SecurityAlert/ResolveSecurityAlert',
        request,
        metadata || {},
        this.methodDescriptorResolveSecurityAlert,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/security_audit.SecurityAlert/ResolveSecurityAlert',
    request,
    metadata || {},
    this.methodDescriptorResolveSecurityAlert);
  }

  methodDescriptorGetSecurityAlertsPaginated = new grpcWeb.MethodDescriptor(
    '/security_audit.SecurityAlert/GetSecurityAlertsPaginated',
    grpcWeb.MethodType.UNARY,
    security_audit_pb.GetSecurityAlertsPaginatedRequest,
    security_audit_pb.GetSecurityAlertsPaginatedResponse,
    (request: security_audit_pb.GetSecurityAlertsPaginatedRequest) => {
      return request.serializeBinary();
    },
    security_audit_pb.GetSecurityAlertsPaginatedResponse.deserializeBinary
  );

  getSecurityAlertsPaginated(
    request: security_audit_pb.GetSecurityAlertsPaginatedRequest,
    metadata?: grpcWeb.Metadata | null): Promise<security_audit_pb.GetSecurityAlertsPaginatedResponse>;

  getSecurityAlertsPaginated(
    request: security_audit_pb.GetSecurityAlertsPaginatedRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: security_audit_pb.GetSecurityAlertsPaginatedResponse) => void): grpcWeb.ClientReadableStream<security_audit_pb.GetSecurityAlertsPaginatedResponse>;

  getSecurityAlertsPaginated(
    request: security_audit_pb.GetSecurityAlertsPaginatedRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: security_audit_pb.GetSecurityAlertsPaginatedResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/security_audit.SecurityAlert/GetSecurityAlertsPaginated',
        request,
        metadata || {},
        this.methodDescriptorGetSecurityAlertsPaginated,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/security_audit.SecurityAlert/GetSecurityAlertsPaginated',
    request,
    metadata || {},
    this.methodDescriptorGetSecurityAlertsPaginated);
  }

  methodDescriptorGetCriticalUnresolvedAlerts = new grpcWeb.MethodDescriptor(
    '/security_audit.SecurityAlert/GetCriticalUnresolvedAlerts',
    grpcWeb.MethodType.UNARY,
    security_audit_pb.GetCriticalUnresolvedAlertsRequest,
    security_audit_pb.GetCriticalUnresolvedAlertsResponse,
    (request: security_audit_pb.GetCriticalUnresolvedAlertsRequest) => {
      return request.serializeBinary();
    },
    security_audit_pb.GetCriticalUnresolvedAlertsResponse.deserializeBinary
  );

  getCriticalUnresolvedAlerts(
    request: security_audit_pb.GetCriticalUnresolvedAlertsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<security_audit_pb.GetCriticalUnresolvedAlertsResponse>;

  getCriticalUnresolvedAlerts(
    request: security_audit_pb.GetCriticalUnresolvedAlertsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: security_audit_pb.GetCriticalUnresolvedAlertsResponse) => void): grpcWeb.ClientReadableStream<security_audit_pb.GetCriticalUnresolvedAlertsResponse>;

  getCriticalUnresolvedAlerts(
    request: security_audit_pb.GetCriticalUnresolvedAlertsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: security_audit_pb.GetCriticalUnresolvedAlertsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/security_audit.SecurityAlert/GetCriticalUnresolvedAlerts',
        request,
        metadata || {},
        this.methodDescriptorGetCriticalUnresolvedAlerts,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/security_audit.SecurityAlert/GetCriticalUnresolvedAlerts',
    request,
    metadata || {},
    this.methodDescriptorGetCriticalUnresolvedAlerts);
  }

  methodDescriptorDeleteSecurityAlert = new grpcWeb.MethodDescriptor(
    '/security_audit.SecurityAlert/DeleteSecurityAlert',
    grpcWeb.MethodType.UNARY,
    security_audit_pb.DeleteSecurityAlertRequest,
    security_audit_pb.DeleteSecurityAlertResponse,
    (request: security_audit_pb.DeleteSecurityAlertRequest) => {
      return request.serializeBinary();
    },
    security_audit_pb.DeleteSecurityAlertResponse.deserializeBinary
  );

  deleteSecurityAlert(
    request: security_audit_pb.DeleteSecurityAlertRequest,
    metadata?: grpcWeb.Metadata | null): Promise<security_audit_pb.DeleteSecurityAlertResponse>;

  deleteSecurityAlert(
    request: security_audit_pb.DeleteSecurityAlertRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: security_audit_pb.DeleteSecurityAlertResponse) => void): grpcWeb.ClientReadableStream<security_audit_pb.DeleteSecurityAlertResponse>;

  deleteSecurityAlert(
    request: security_audit_pb.DeleteSecurityAlertRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: security_audit_pb.DeleteSecurityAlertResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/security_audit.SecurityAlert/DeleteSecurityAlert',
        request,
        metadata || {},
        this.methodDescriptorDeleteSecurityAlert,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/security_audit.SecurityAlert/DeleteSecurityAlert',
    request,
    metadata || {},
    this.methodDescriptorDeleteSecurityAlert);
  }

  methodDescriptorGetAlertStatistics = new grpcWeb.MethodDescriptor(
    '/security_audit.SecurityAlert/GetAlertStatistics',
    grpcWeb.MethodType.UNARY,
    security_audit_pb.GetAlertStatisticsRequest,
    security_audit_pb.GetAlertStatisticsResponse,
    (request: security_audit_pb.GetAlertStatisticsRequest) => {
      return request.serializeBinary();
    },
    security_audit_pb.GetAlertStatisticsResponse.deserializeBinary
  );

  getAlertStatistics(
    request: security_audit_pb.GetAlertStatisticsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<security_audit_pb.GetAlertStatisticsResponse>;

  getAlertStatistics(
    request: security_audit_pb.GetAlertStatisticsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: security_audit_pb.GetAlertStatisticsResponse) => void): grpcWeb.ClientReadableStream<security_audit_pb.GetAlertStatisticsResponse>;

  getAlertStatistics(
    request: security_audit_pb.GetAlertStatisticsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: security_audit_pb.GetAlertStatisticsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/security_audit.SecurityAlert/GetAlertStatistics',
        request,
        metadata || {},
        this.methodDescriptorGetAlertStatistics,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/security_audit.SecurityAlert/GetAlertStatistics',
    request,
    metadata || {},
    this.methodDescriptorGetAlertStatistics);
  }

}

